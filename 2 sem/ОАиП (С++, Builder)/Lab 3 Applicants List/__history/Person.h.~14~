#ifndef PersonH
#define PersonH

class List
{
	public:
	List();
	~List(){};
	void Add(String surname, String name, String patronymic, String address,
			 int math, int language, int physics);  //добавление элемента в список
	int GetSize(){return size;}     //получение размера списка
	void Print(TMemo *);            //вывод содержимого
	void SearchBySurname(TMemo *, String);  //поиск по фамилии и вывод
	void SearchByCity(TMemo *, String);  //поиск по городу и вывод
	void SearchByMark(TMemo *, int, int);  //поиск по оценке и вывод
	String DeletePerson();//удаление неподходящего абитуриента
	void Delete();   //полное освобождение памяти

	private:
    class Person
	{
		public:
		Person *next;
		String surname;
		String name;
		String patronymic;
		String address;
		int math;
		int language;
		int physics;
		float average;
		Person(String surname, String name, String patronymic, String address,
			 int math, int language, int physics, Person *next = NULL)
		{
			this->surname = surname;
			this->name = name;
			this->patronymic = patronymic;
			this->address = address;
			this->math = math;
			this->language = language;
			this->physics = physics;
			this->average = ((float)(math + language + physics)) / 3;
            this->next = next;
		}
	};

	Person *head;
	int size;
	public:
	void PrintToMemo( Person *, TMemo *);       //вспомогательная для вывода
};

#endif
