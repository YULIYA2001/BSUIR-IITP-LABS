#include <vcl.h>
#pragma hdrstop

#include "Unit1.h"
#include "Disk.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
}
//глобальное создание указателя на массив объектов класса и его длина
Disk *disk;
int length;
TStringList *List;
//при создании формы
void __fastcall TForm1::FormCreate(TObject *Sender)
{
	//загрузка содержимого файла в список строк
	List = new TStringList;
	try
	{
		List->LoadFromFile("Disk.txt");
	}
	catch(...)
	{
		ShowMessage("Файл \"Disk.txt\" не найден");
	}
	//создание необходимого количества объектов класса в динамическом массиве
	length = List->Count / 6;
	disk = new Disk[length];
	//инициализация полей класса
	for(int i = 0, x = 0; i < length; i++, x+=6)
	{
		disk[i].ReadFromFile(List, x);		ComboBox1->Items->Add(disk[i].type);	}	ComboBox1->ItemIndex = 0;	ComboBox1Change(NULL);}
//изменение Edit при выборе другого элемента в ComboBox
void __fastcall TForm1::ComboBox1Change(TObject *Sender)
{
	Memo1->Lines->Clear();
	int i = ComboBox1->ItemIndex;
	Edit1->Text=disk[i].name;	Edit2->Text=disk[i].author;	Edit3->Text=disk[i].cost;	Edit4->Text=disk[i].notes;
}
//кнопка "Сохранить"
void __fastcall TForm1::Button4Click(TObject *Sender)
{
	for(int i = 0; i < length; i++)
	{
		disk[i].Show(Memo1);
	}
	Memo1->Lines->SaveToFile("Disk.txt");
	//Memo1->Lines->Clear();
}
//загрузка данных в мемо при нажатии кнопки "Содержимое файла"
void __fastcall TForm1::Button2Click(TObject *Sender)
{
	Memo1->Lines->Clear();
	for(int i = 0; i < List->Count; i++)
	{
		Memo1->Lines->Insert(i, List->Strings[i]);
	}
}
//кнопка "Текущее содержимое"
void __fastcall TForm1::Button8Click(TObject *Sender)
{
	Memo1->Lines->Clear();
	for(int i = 0; i < length; i++)
	{
		disk[i].Show(Memo1);
	}
}
//кнопка "Добавить"
void __fastcall TForm1::Button1Click(TObject *Sender)
{
	int check = 0;
	//проверка на нужное количество данных
	if (Memo2->Lines->Count != 5)
	{
		Application->Title="ОШИБКА!";
		ShowMessage("Неверные данные для добавления");
	}
	else
	{
		//проверка на наличие данных
		for (int i = 0; i < 5; i++)
		{
			if (Memo2->Lines->Strings[i] != "")
				check ++;
		}
		if (check == 5) //если данных хватает
		{
			disk->Add(length, disk, Memo2);
			ComboBox1->Items->Add(Memo2->Lines->Strings[0]);
			Application->Title="Success";
			ShowMessage("Данные добавлены успешно");
		}
		else   //если данных мало
		{
			Application->Title="ОШИБКА!";
			ShowMessage("Неверные данные для добавления");
		}
	}
	Memo2->Lines->Clear();
}
//кнопка "Удалить"
void __fastcall TForm1::Button7Click(TObject *Sender)
{
	Memo1->Lines->Clear();
	if(ComboBox1->Items->Strings[0] == "")  //если все данные удалены
	{
		Application->Title="ОШИБКА!";
		ShowMessage("Данные не найдены");
	}
	else
	{
		disk->Remove(ComboBox1->ItemIndex, length, disk);
		ComboBox1->Items->Delete(ComboBox1->ItemIndex);
		if (ComboBox1->Items->Strings[0] == "")  //если данных не осталось -> очистка всех полей
		{
			ComboBox1->Clear();
			Edit1->Text="";
			Edit2->Text="";			Edit3->Text="";			Edit4->Text="";		}
		else
		{   //если данне остались -> заполнить ComboBox и Edit-ы
			ComboBox1->ItemIndex = 0;
			ComboBox1Change(NULL);
			for(int i = 0; i < length; i++)
			{
				disk[i].Show(Memo1);
			}
		}
    }
}
//кнопка "Сортировать"
void __fastcall TForm1::Button3Click(TObject *Sender)
{
	Memo1->Lines->Clear();
	disk->Sort(RadioGroup1->ItemIndex,length, disk);
	//новое расположение в ComboBox
	ComboBox1->Items->Clear();
	for(int i = 0; i < length; i++)
	{
		ComboBox1->Items->Add(disk[i].type);	}
	ComboBox1->ItemIndex = 0;
	ComboBox1Change(NULL);
    //показать отсортированный
	for(int i = 0; i < length; i++)
	{
		disk[i].Show(Memo1);
	}
}
//кнопка "Поиск"
void __fastcall TForm1::Button5Click(TObject *Sender)
{
	bool check = false;
	Memo1->Lines->Clear();
	for (int i = 0; i < length; i++)
	{
		if (disk[i].author == Edit5->Text || disk[i].name == Edit5->Text)
		{
			disk[i].Show(Memo1);
			ComboBox1->ItemIndex = i;
			Edit1->Text=disk[i].name;
			Edit2->Text=disk[i].author;			Edit3->Text=disk[i].cost;			Edit4->Text=disk[i].notes;
			check = true;
			Edit5->Clear();
		}
	}
	if(!check)
	{
		Application->Title="ОШИБКА!";
		ShowMessage("Данные не найдены");
		Edit5->Clear();
	}
}
//кнопка "Выход"
void __fastcall TForm1::Button6Click(TObject *Sender)
{
	Form1->Close();
	delete []disk;
}
//убрать мигающий курсор из основного memo
void __fastcall TForm1::Memo1MouseMove(TObject *Sender, TShiftState Shift, int X,
          int Y)
{
	HideCaret(Memo1->Handle);
}

