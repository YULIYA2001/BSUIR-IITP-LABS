//---------------------------------------------------------------------------

#pragma hdrstop

#include "Triangle.h"
#include <Math.h>
#define RAD_60 1.047197551196597746154214461093

Triangle :: Triangle(int a, int b, int c, int d)
	{
		x1 = a;
		y1 = b;
		x2 = c;
		y2 = d;
	}

void Triangle :: show(TCanvas *Canvas)
	{
		Canvas->Pen->Color=clBlue;
        Canvas->Pen->Width=3;
		helpSide = sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
		Canvas->MoveTo(x1, y1);
		Canvas->LineTo(x1 + helpSide, y1);
		Canvas->LineTo(x1 + helpSide / 2, y1 + helpSide*sin(RAD_60));
		Canvas->LineTo(x1, y1);
	}

float Triangle :: Area()
	{
		helpSide = sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
		S = (float)(0.5 * helpSide * helpSide * sin(RAD_60));
		return S;
	}

float Triangle :: Perimeter()
	{
		helpSide = sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
		P = helpSide * 3;
		return P;
	}

int Triangle :: XCentMass()
	{
		helpSide = sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
		X = (int)(x1 + helpSide / 2);
		return X;
	}

int Triangle :: YCentMass()
	{
        helpSide = sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
		Y = (int)(y1 + (helpSide * sin(RAD_60) / 3));
		return Y;
	}

#pragma package(smart_init)
