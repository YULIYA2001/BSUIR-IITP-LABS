//---------------------------------------------------------------------------

#pragma hdrstop

#include "Figure.h"
#include <math.h>

float Figure :: mod(float a)
	{
		return (a < 0) ? (float)(a*(-1)) : a;
    }

int Figure :: mod(int a)
	{
		return (a < 0) ? a*(-1) : a;
	}

void Figure :: moveUp(int x1, int &y1, int x2, int &y2)
	{
			 y1 -= 5;
			 y2 -= 5;
	}

void Figure :: moveDown(int x1, int &y1, int x2, int &y2)
	{
			y1 += 5;
			y2 += 5;
	}

void Figure :: moveRight(int &x1, int y1, int &x2, int y2)
	{
			x1 += 5;
			x2 += 5;
	}

void Figure :: moveLeft(int &x1, int y1, int &x2, int y2)
	{
			x1 -= 5;
			x2 -= 5;
	}

void Figure :: Bigger(int &x1, int &y1, int &x2, int &y2)
	{
		x1 -= 5;
		x2 += 5;
		y1 -= 5;
        y2 += 5;
	}

void Figure :: Smaller(int &x1, int &y1, int &x2, int &y2)
	{
		if((x2 - x1) > 0 && (y2 - y1) > 0)
		{
			x1 += 5;
			x2 -= 5;
			y1 += 5;
			y2 -= 5;
		}
	}

void Figure :: Rotation(int newX, int newY, int &x1, int &y1, int &x2, int &y2)
	{
		x1 = (int)((newX - x1) * cos(0.5) - (newY - y1) * sin(0.5));
		y1 = (int)((newX - x1) * sin(0.5) + (newY - y1) * cos(0.5));
		x2 = (int)((newX - x2) * cos(0.5) - (newY - y2) * sin(0.5));
		y2 = (int)((newX - x2) * sin(0.5) + (newY - y2) * cos(0.5));
	}

#pragma package(smart_init)

